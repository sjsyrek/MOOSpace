@dump gic;#19950.("heading") = {};#19950.("bearing") = 0;#19950.("speed") = 0;#19950.("in_range") = {{}, {}, {}, {}};#19950.("command_msg") = "You are now in command of %t.";#19950.("ocommand_msg") = "%n is now in command of %t.";#19950.("relinquish_msg") = "You are no longer in command of %t.";#19950.("not_commander_msg") = "You are not currently in command of %t.";#19950.("commandeer_msg") = "%n has commandeered %t!";#19950.("launch_origin_msg") = "You launch %t into space.";#19950.("olaunch_origin_msg") = "%n launches %t into space.";#19950.("launch_outside_msg") = "%t rises into the air and blasts off into space.";#19950.("launch_arrive_msg") = "%t arrives safely in";#19950.("land_origin_msg") = "You lower the landing gear and %t prepares to descend to %d.";#19950.("oland_origin_msg") = "%n lowers the landing gear and %t prepares to descend to %d.";#19950.("land_arrive_msg") = "You bring %t in for a smooth landing on";#19950.("oland_arrive_msg") = "%n brings %t in for a smooth landing on";#19950.("land_outside_msg") = "%t approaches from the sky and lands nearby.";#19950.("engage_origin_msg") = "You say, \"Engage!\" and %t powers up its engines.";#19950.("oengage_origin_msg") = "%n says, \"Engage!\" and %t powers up its engines.";#19950.("engage_arrive_msg") = "You have brought %t safely to its destination.";#19950.("oengage_arrive_msg") = "%t arrives safely at its destination.";#19950.("hail_origin_msg") = "You hail %d with: ";#19950.("ohail_origin_msg") = "%n hails %d with: ";#19950.("hail_receive_msg") = "%n hails from %t: ";#19950.("not_trusted_pilot_msg") = "Permission denied. You are not a trusted pilot of %t.";#19950.("orelinquish_msg") = "%n is no longer in command of %t.";#19950.("olaunch_arrive_msg") = "%n has successfully launched %t into space.";#19950.("engine_engaged") = 0;#19950.("commander_msg") = "Your crew stands at attention as you enter the bridge.";#19950.("ocommander_msg") = "The crew stands at attention as %t enters the bridge.";#19950.("w_time") = 948355200;#19950.("w_prog") = 6*** More ***  17 lines left.  Do @more [rest|flush] for more.@more r;#19950.("entrances") = {};#19950.("blessed_task") = 1815215361;#19950.("exits") = {};#19950.("blessed_object") = #119;#19950.("key") = 0;#19950.("aliases") = {"Generic Interstellar Craft", "GIC"};#19950.("description") = {"This room is a slow culmination of the best stuff of all the MOO's.", "", "6-14-93....frand's detailed room", "6-14-93....modified detailed room", "6-14-93....seated room", "6-15-93....secure entry room", "6-16-93....obvious exit telling", "6-16-93....context sensitive 'say'", "7-2-93.....object description integration (somewhat)", "7-19-93....time events", "", "More to come later...", "", "New feature as of 9-7-94", "Weather!  Use @weather to see status, on, off, etc...", "type: @init here to initialize your room to your timezone.", "", "Please type  help #7424  for more help."};#19950.("object_size") = {18510, 1294620682}"#19950.("original_owner") => E_PERM (Permission denied)"#19950.("days_left") => E_PERM (Permission denied);#19950.("creation_date") = 969427497"#19950.("queued_task_limit") => E_PERM (Permission denied)@args #19950:"laun*ch" none none none@program #19950:launch"Usage:  launch";"  Launches the ship into space if it has landed somewhere.";if (this:valid_space_object() && this:valid_commander())  if (this.in_space == 1)    player:tell(this:title(), " is already in space.");  else    this:message_tell(this.launch_origin_msg);    this:message_announce(this.olaunch_origin_msg);    this.location:announce_all($string_utils:pronoun_sub(this.launch_outside_msg));    player:tell();    this:command_launch();    player:tell();    this:message_tell(((this.launch_arrive_msg + " ") + this.space_location:title()) + ".");    this:message_announce(((this.olaunch_arrive_msg + " ") + this.space_location:title()) + ".");  endifendif"LMB #23230 10/01/2000";.@args #19950:"command_launch" this none this@program #19950:command_launchthis:moveto(this.space_location);this.in_space = 1;old_range = this.in_range;this:sensor_sweep();this:range_update(old_range);this:scan();"LMB #23230 09/30/2000";.@args #19950:"sensor_sweep" this none this@program #19950:sensor_sweepthis.in_range = {{}, {}, {}, {}};if (this.in_space == 1)  set = this.location.contents;  for o in (this.universe.contents)    set = setadd(set, o);  endfor  for x in (setremove(set, this))    if (x in #22140.valid_space_objects)      if ($object_utils:isa(x, #9602))        if ((x != this.location) && ((d = this:check_distance(this.coordinates, x.coordinates)) <= (x.radius + 100)))          if ((d - x.radius) <= 10)            this.in_range[3] = setadd(this.in_range[3], x);          elseif ((d - x.radius) <= 60)            this.in_range[2] = setadd(this.in_range[2], x);          elseif ((d - x.radius) <= 100)            this.in_range[4] = setadd(this.in_range[4], x);          endif        endif      elseif ($object_utils:isa(x, #8509))        if ((d = this:check_distance(this.coordinates, x.coordinates)) <= 100)          if (d == 0)            this.in_range[1] = setadd(this.in_range[1], x);          elseif (d <= 10)            this.in_range[2] = setadd(this.in_range[2], x);          elseif (d <= 60)            this.in_range[3] = setadd(this.in_range[3], x);          elseif (d <= 100)            this.in_range[4] = setadd(this.in_range[4], x);          endif        endif      endif@more r    endif  endforendif"LMB #23230 10/01/2000";.@args #19950:"sensor_update" this none this@program #19950:sensor_update"LMB #23230 09/25/2000";.@args #19950:"check_distance" this none this@program #19950:check_distance{one, two} = args;x = two[1] - one[1];y = two[2] - one[2];z = two[3] - one[3];sum = ($math_utils:pow(x, 2) + $math_utils:pow(y, 2)) + $math_utils:pow(z, 2);return toint($math_utils:sqrt(abs(tofloat(sum))));"LMB #23230 09/29/2000";.@args #19950:"look_self" this none this@program #19950:look_selfif (player.location == this)  if (this.in_space == 0)    player:tell("On Viewscreen: ", this.location:title());  else    player:tell("On Viewscreen: ", this.location:title(), " ", this:location());  endif  player:tell();  pass(@args);else  pass(@args);endif"LMB #23230 09/30/2000";.@args #19950:"range_update" this none this@program #19950:range_updatethis:sensor_sweep();{a, b, c, d} = this.in_range;range = {@a, @b, @c, @d};{p, q, r, s} = args[1];old_range = {@p, @q, @r, @s};total_range = {@range, @old_range};set = total_range;for x in (total_range)  if ((!$object_utils:isa(x, #19950)) || (x.in_space == 0))    set = setremove(set, x);  endifendforfor x in (set)  {x1, x2, x3, x4} = x.in_range;  xrange = {@x1, @x2, @x3, @x4};  d = this:check_distance(this.coordinates, x.coordinates);  if (d < 100)    if (!(this in xrange))      x:sensor_sweep();      x:announce_all(this:oname(), " has entered sensor range.");    endif  elseif ((d > 100) && (this in set))    x:sensor_sweep();    x:announce_all(this:oname(), " is no longer in sensor range.");  endifendfor"LMB #23230 10/01/2000";.@args #19950:"sc*an" any none none@chmod #19950:scan rxd@program #19950:scan"Usage:  scan <any>";"  Without an argument, scans the local region of space, returning a description of the ship's surroundings as well as the names of any objects in sensor range. With an object in range as an argument, scans that object.";if (this:valid_space_object())  this:sensor_sweep();  if (!args)    if (this.in_space == 1)      player:tell(this.location:title(), " ", this:location());      player:tell_lines(this.location.description);      player:tell();      names = {};      if (length(this.in_range[1]) == 1)        x = this.in_range[1][1];        player:tell(x:oname(), " is in this sector.");      elseif (length(this.in_range[1]) > 1)        for n in (this.in_range[1])          names = {@names, n.oname};        endfor        player:tell($string_utils:english_list(names), " are in this sector.");      endif      if (length(this.in_range[2]) == 1)        x = this.in_range[2][1];        player:tell(x:oname(), " is nearby.");      elseif (length(this.in_range[2]) > 1)        for n in (this.in_range[2])          names = {@names, n.oname};        endfor        player:tell($string_utils:english_list(names), " are nearby.");      endif      if (length(this.in_range[3]) == 1)@more r        x = this.in_range[3][1];        player:tell(x:oname(), " is in medium sensor range.");      elseif (length(this.in_range[3]) > 1)        for n in (this.in_range[3])          names = {@names, n.oname};        endfor        player:tell($string_utils:english_list(names), " are in medium sensor range.");      endif      if (length(this.in_range[4]) == 1)        x = this.in_range[4][1];        player:tell(x:oname(), " is in long sensor range.");      elseif (length(this.in_range[4]) > 1)        for n in (this.in_range[4])          names = {@names, n.oname};        endfor        player:tell($string_utils:english_list(names), " are in long sensor range.");      endif    else      this:look_outside();    endif  else    if (this.in_space == 1)      {a, b, c, d} = this.in_range;      range = {@a, @b, @c, @d};      match = $string_utils:match(argstr, range, "oname");      if ((match == $failed_match) || (!(match in #22140.valid_space_objects)))        player:tell("There is no '", argstr, "' in sensor range.");      elseif (match == $ambiguous_match)        player:tell("'", argstr, "' can refer to more than one object in sensor range. Be more specific.");      else        player:tell(match:oname(), " ", match:location(), " is in ", (match.location == this.location) ? match.location:title() | match.location:oname(), ".");        player:tell_lines(match:odescription());      endif    else      match = $string_utils:match(argstr, range, aliases);      if (match == $failed_match)        player:tell("There is no '", argstr, "' in ", this.location:title(), ".");      elseif (match == $ambiguous_match)        player:tell("'", argstr, "' can refer to more than one object in ", this.location:title(), ". Be more specific.");      endif    endif  endifendif"LMB #23230 09/30/2000";.@args #19950:"lan*d" any none none@program #19950:land"Usage:  land <any>";"  Lands the ship at the specified location, if possible. Only trusted ships may land at locations where the trusted ship list is not empty.";if (this:valid_space_object() && this:valid_commander())  if (this.in_space == 0)    player:tell(this:title(), " has already landed.");  elseif (!args)    player:tell("Where do you wish to land?");  else    {a, b, c, d} = this.in_range;    range = {@a, @b, @c, @d};    match = $string_utils:match(argstr, range, "oname");    if ((match == $failed_match) || (!(match in #22140.valid_space_objects)))      player:tell("There is no '", argstr, "' in sensor range.");    elseif (match == $ambiguous_match)      player:tell("'", argstr, "' can refer to more than one object in sensor range. Be more specific.");    elseif ((!$object_utils:isa(match, #7771)) || $object_utils:isa(match, #21733))      player:tell(this:title(), " cannot land on ", match:oname(), ".");    elseif ((match.trusted_ships != {}) && ((!this) in match.trusted_ships))      this:message_tell(this.not_trusted_ship_msg);    else      this:message_tell(this.land_origin_msg);      this:message_announce(this.oland_origin_msg);      player:tell();      this:command_land(match);      player:tell();      this.location:announce_all($string_utils:pronoun_sub(this.land_outside_msg));      this:message_tell(((this.land_arrive_msg + " ") + match:oname()) + ".");      this:message_announce(((this.oland_arrive_msg + " ") + match:oname()) + ".");    endif  endifendif"LMB #23230 10/01/2000";.@args #19950:"command_land" this none this@program #19950:command_landthis:moveto(args[1]);this.in_space = 0;old_range = this.in_range;this:range_update(old_range);this:scan();"LMB #23230 09/30/2000";.@args #19950:"look_outside" this none this@program #19950:look_outsideplayer:tell_lines(this.location:title());desc = this.location:description();if (desc)  player:tell_lines(desc);else  player:tell("You see nothing special.");endifif ($object_utils:has_callable_verb(this.location, "tell_integration"))  this.location:tell_integration();endifthis.location:tell_contents(setremove(this.location.contents, this), 3);"LMB #23230 09/30/2000";.@args #19950:"ent*er bo*ard go" this none none@program #19950:enter"Usage:  enter <this>";"  Board the ship. If you have :moveto() protection, this command may not function.";if ((player.location == this) || $object_utils:isa(this.location, #16043))  player:tell("I don't understand that.");else  player:moveto(this);  if (player.location != this)    player:tell($string_utils:pronoun_sub("You seem unable to board %t. Make sure you don't have moveto() protection."));  else    if (player in this.permitted)      this:message_tell(this.commander_enter_msg);      this:message_announce(this.ocommander_enter_msg);    endif  endifendif"LMB #23230 01/09/2011";.@args #19950:"ex*it dis*embark out" none none none@program #19950:exit"Usage:  exit";"  Exit the ship. You cannot exit a ship while it is in space.";if (player.location != this)  player:tell("I don't understand that.");elseif ($object_utils:isa(this.location, #16043))  player:tell($string_utils:pronoun_sub("You cannot exit %t until it lands."));else  player:moveto(this.location);  if (player.location == this)    player:tell($string_utils:pronoun_sub("You seem unable to exit %t. Make sure you don't have moveto() protection."));  endif@more rendif"LMB #23230 01/09/2011";.@args #19950:"enterfunc confunc" this none this@program #19950:enterfuncpass(@args);if (this:perm_check(caller))  player:tell(this:commander_msg());  this:announce(this:ocommander_msg());endif"LMB #23230 01/09/2011";.@args #19950:"sp*eed" any none none@program #19950:speed"Usage:  speed <any>";"  Displays the current speed of the ship or sets a new one.";if (this:valid_space_object())  if (!args)    player:tell("The current speed of ", this:title(), " is ", this.speed, ".");  elseif (this:valid_commander())    speed = toint(argstr);    if ((speed < 1) || (speed > 10))      player:tell("'", argstr, "' is an incorrect speed setting.");    else      this.speed = toint(speed);      player:tell(this:title(), " is now traveling at warp ", speed, ".");    endif  endifendif"LMB #23230 10/01/2000";.@args #19950:"check_location" this none this@program #19950:check_location{x1, y1, z1} = this.coordinates;{x2, y2, z2} = this.heading;a = x2 - x1;b = y2 - y1;c = $math_utils:pow(a, 2) + $math_utils:pow(b, 2);c = tofloat(c);c = $math_utils:sqrt(c);e = this:check_distance(this.coordinates, this.heading);d = $math_utils:pow(toint(e), 2) - $math_utils:pow(toint(c), 2);d = tofloat(d);d = $math_utils:sqrt(d);e = tofloat(e);sum = ($math_utils:pow(toint(c), 2) + $math_utils:pow(toint(e), 2)) - $math_utils:pow(toint(d), 2);sum = tofloat(sum);sum = sum / ((2.0 * c) * e);theta = acos(sum);f = tofloat(this.speed);z = sin(theta) * f;h = cos(theta) * z;sum = ($math_utils:pow(toint(a), 2) + $math_utils:pow(toint(c), 2)) - $math_utils:pow(toint(b), 2);sum = tofloat(sum) / ((2.0 * tofloat(a)) * tofloat(c));phi = acos(sum);y = sin(phi) * h;x = cos(phi) * y;x = ceil(x);y = ceil(y);z = ceil(z);"TEMPORARY CODE";x_new = this.coordinates[1] + toint(x);y_new = this.coordinates[2] + toint(y);z_new = this.coordinates[3] + toint(z);this.coordinates = {x_new, y_new, z_new};player:tell("New Coordinates: ", this:location());"END TEMPORARY CODE";return {toint(x), toint(y), toint(z)};"LMB #23230 10/01/2000";.@args #19950:"head*ing" any any any@args #19950:"hail" any with any@args #19950:"eng*age dis*engage" none none none@args #19950:"engines" this none this@args #19950:"commander_msg ocommander_msg" this none this@program #19950:commander_msg"Verb -> property matching for messages defined on this object not defined on parents.";return $object_utils:has_property(this, verb) ? (msg = this.(verb)) ? $string_utils:pronoun_sub(msg) | "" | "";"LMB #23230 01/09/2011";."***finished***